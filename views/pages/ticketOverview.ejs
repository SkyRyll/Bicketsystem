<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />

    <!-- CSS Files -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
    <link rel="stylesheet" type="text/css" href="/css/style.css" />
    <link rel="stylesheet" type="text/css" href="/css/navbar.css" />
    <link rel="stylesheet" type="text/css" href="/css/ticketOverview.css" />

    <!-- JS Files -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>

    <title>Ticketsystem: Overview</title>
</head>
<body>
    <%- include('../components/navbar'); %>
    <h1>Ticket Overview</h1>

    <!-- Filter Form -->
    <div class="container mt-4">
        <h4>Filter Tickets</h4>
        <form id="filterForm" class="mb-4">
            <div class="form-row">
                <div class="form-group col-md-4">
                    <label for="ticketTitle">Ticket Title</label>
                    <input type="text" class="form-control" id="ticketTitle" placeholder="Search by title">
                </div>
                <div class="form-group col-md-4">
                    <label for="status">Status</label>
                    <select class="form-control" id="status">
                        <option value="">Select Status</option>
                        <option value="1">Open</option>
                        <option value="2">Closed</option>
                        <option value="3">In Progress</option>
                    </select>
                </div>
                <div class="form-group col-md-4">
                    <label for="creationDate">Creation Date</label>
                    <input type="date" class="form-control" id="creationDate">
                </div>
                <div class="form-group col-md-4">
                    <label for="sortOrder">Sort by Date</label>
                    <select class="form-control" id="sortOrder">
                        <option value="">Select Sorting</option>
                        <option value="asc">Ascending (Oldest First)</option>
                        <option value="desc">Descending (Newest First)</option>
                    </select>
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Apply Filters</button>
        </form>
    </div>

    <!-- Ticket List -->
    <div id="ticketList" class="container mt-4">
        <!-- Tickets will be dynamically added here -->
    </div>

    <script>
        let allTickets = [];  // Array to hold all tickets

        // Function to fetch tickets from the API
        function fetchTickets() {
            const apiUrl = 'http://localhost:3000/api/getAllTickets';

            // Fetch request to the API
            fetch(apiUrl)
                .then(response => response.json())
                .then(data => {
                    allTickets = data;  // Save all tickets in a global array
                    displayTickets(allTickets);  // Display all tickets initially
                })
                .catch(error => {
                    console.error('Error fetching tickets:', error);
                    const ticketList = document.getElementById('ticketList');
                    ticketList.innerHTML = '<p>Error loading tickets.</p>';
                });
        }

        // Function to display tickets based on the passed array
        function displayTickets(tickets) {
            const ticketList = document.getElementById('ticketList');
            ticketList.innerHTML = '';  // Clear previous tickets

            if (tickets.length === 0) {
                ticketList.innerHTML = '<p>No tickets found.</p>';
                return;
            }

            // Display tickets
            tickets.forEach(ticket => {
                const ticketDiv = document.createElement('div');
                ticketDiv.classList.add('ticket-card', 'mb-3', 'p-3', 'border', 'rounded');

                ticketDiv.innerHTML = `
                    <h5 class="ticket-title">${ticket.ticket_title}</h5>
                    <p class="ticket-description">${ticket.ticket_description}</p>
                    <p class="ticket-date">Created on: ${new Date(ticket.creation_date).toLocaleString()}</p>
                    <p class="ticket-status">Status: ${ticket.status_id === 1 ? 'Open' : ticket.status_id === 2 ? 'Closed' : 'In Progress'}</p>
                `;

                ticketList.appendChild(ticketDiv);
            });
        }

        // Function to filter tickets based on user input
        function filterTickets() {
            const ticketTitle = document.getElementById('ticketTitle').value.toLowerCase();
            const status = document.getElementById('status').value;
            const creationDate = document.getElementById('creationDate').value;
            const sortOrder = document.getElementById('sortOrder').value;

            let filteredTickets = allTickets.filter(ticket => {
                let isMatch = true;

                // Filter by title
                if (ticketTitle && !ticket.ticket_title.toLowerCase().includes(ticketTitle)) {
                    isMatch = false;
                }

                // Filter by status
                if (status && ticket.status_id != status) {
                    isMatch = false;
                }

                // Filter by creation date
                if (creationDate && ticket.creation_date.substring(0, 10) !== creationDate) {
                    isMatch = false;
                }

                return isMatch;
            });

            // Sort by creation date if a sort option is selected
            if (sortOrder) {
                filteredTickets = filteredTickets.sort((a, b) => {
                    const dateA = new Date(a.creation_date);
                    const dateB = new Date(b.creation_date);

                    return sortOrder === 'asc' ? dateA - dateB : dateB - dateA;
                });
            }

            // Display filtered and sorted tickets
            displayTickets(filteredTickets);
        }

        // Event listener for the filter form
        document.getElementById('filterForm').addEventListener('submit', function(event) {
            event.preventDefault();  // Prevent default form submit behavior
            filterTickets();  // Apply the filters
        });

        // Load and fetch all tickets initially
        document.addEventListener('DOMContentLoaded', () => {
            fetchTickets();  // Fetch all tickets without filters
        });
    </script>
</body>
</html>
</div>